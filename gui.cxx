// generated by Fast Light User Interface Designer (fluid) version 1.0304
#include "gui.h"
#include "scene.h"

void GUI::cb_RotatePerspective_i(Fl_Button*, void*) {
    RotatePerspective_cb();
}

void GUI::cb_RotatePerspective(Fl_Button* o, void* v) {
    ((GUI*)(o->parent()->user_data()))->cb_RotatePerspective_i(o,v);
}

void GUI::cb_RotatePoint_i(Fl_Return_Button*, void*) {
    RotatePoint_cb();
}

void GUI::cb_RotatePoint(Fl_Return_Button* o, void* v) {
    ((GUI*)(o->parent()->user_data()))->cb_RotatePoint_i(o,v);
}

GUI::GUI() {
    {
        uiw = new Fl_Double_Window(199, 197, "GUI");
        uiw->user_data((void*)(this));
        {
            Fl_Button* o = new Fl_Button(15, 15, 150, 50, "Rotate Perspective");
            o->selection_color(FL_DARK_RED);
            o->callback((Fl_Callback*)cb_RotatePerspective);
        } // Fl_Button* o
        {
            Fl_Button* o = new Fl_Button(15, 80, 150, 50, "Rotate Point (2 deg)");
            o->callback((Fl_Callback*)cb_RotatePoint);
        } // Fl_Return_Button* o
        uiw->end();
    } // Fl_Double_Window* uiw
}

int main(int argc, char **argv) {
    scene = new Scene;
    return Fl::run();
}

void GUI::show() {
    uiw->show();
}

void GUI::RotatePerspective_cb() {
    scene->RotatePerspective();
}

void GUI::RotatePoint_cb() {
    scene->RotatePoint();
}